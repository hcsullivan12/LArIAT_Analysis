////////////////////////////////////////////////////////////////////////
// Class:       CalculatePionXS
// Module Type: analyzer
// File:        CalculatePionXS_module.cc
//
// Generated at Thu May 30 13:07:47 2019 by Hunter Sullivan using artmod
// from cetpkgsupport v1_10_02.
////////////////////////////////////////////////////////////////////////

#include "art/Framework/Core/EDAnalyzer.h"
#include "art/Framework/Core/ModuleMacros.h"
#include "art/Framework/Principal/Event.h"
#include "art/Framework/Principal/Handle.h"
#include "art/Framework/Principal/Run.h"
#include "art/Framework/Principal/SubRun.h"
#include "art/Utilities/InputTag.h"
#include "fhiclcpp/ParameterSet.h"
#include "messagefacility/MessageLogger/MessageLogger.h"


class CalculatePionXS;

class CalculatePionXS : public art::EDAnalyzer {
public:
  explicit CalculatePionXS(fhicl::ParameterSet const & p);
  // The destructor generated by the compiler is fine for classes
  // without bare pointers or other resource use.

  // Plugins should not be copied or assigned.
  CalculatePionXS(CalculatePionXS const &) = delete;
  CalculatePionXS(CalculatePionXS &&) = delete;
  CalculatePionXS & operator = (CalculatePionXS const &) = delete;
  CalculatePionXS & operator = (CalculatePionXS &&) = delete;

  // Required functions.
  void analyze(art::Event const & e) override;

  // Selected optional functions.
  void beginJob() override;
  void beginRun(art::Run const & r) override;
  void beginSubRun(art::SubRun const & sr) override;
  void endJob() override;
  void endRun(art::Run const & r) override;
  void endSubRun(art::SubRun const & sr) override;
  void reconfigure(fhicl::ParameterSet const & p) override;
  void respondToCloseInputFile(art::FileBlock const & fb) override;
  void respondToCloseOutputFiles(art::FileBlock const & fb) override;
  void respondToOpenInputFile(art::FileBlock const & fb) override;
  void respondToOpenOutputFiles(art::FileBlock const & fb) override;

private:

  // Declare member data here.

};


CalculatePionXS::CalculatePionXS(fhicl::ParameterSet const & p)
  :
  EDAnalyzer(p)  // ,
 // More initializers here.
{}

void CalculatePionXS::analyze(art::Event const & e)
{
  // Implementation of required member function here.
}

void CalculatePionXS::beginJob()
{
  // Implementation of optional member function here.
}

void CalculatePionXS::beginRun(art::Run const & r)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::beginSubRun(art::SubRun const & sr)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::endJob()
{
  // Implementation of optional member function here.
}

void CalculatePionXS::endRun(art::Run const & r)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::endSubRun(art::SubRun const & sr)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::reconfigure(fhicl::ParameterSet const & p)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::respondToCloseInputFile(art::FileBlock const & fb)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::respondToCloseOutputFiles(art::FileBlock const & fb)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::respondToOpenInputFile(art::FileBlock const & fb)
{
  // Implementation of optional member function here.
}

void CalculatePionXS::respondToOpenOutputFiles(art::FileBlock const & fb)
{
  // Implementation of optional member function here.
}

DEFINE_ART_MODULE(CalculatePionXS)
